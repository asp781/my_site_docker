version: '3'

services:
  db:
    image: postgres:13.4-alpine
    container_name: db
    restart: always
    volumes:
      - /var/lib/postgresql/data/
    env_file:
      - ./.env

  nginx:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    environment:
      - DEFAULT_HOST=ekranstroy.ru


  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
    environment:
      - NGINX_PROXY_CONTAINER=nginx


  web:
    image: asp781/ekranstroy:latest
    environment:
      - VIRTUAL_HOST=ekranstroy.ru,www.ekranstroy.ru
      - LETSENCRYPT_HOST=ekranstroy.ru,www.ekranstroy.ru
      - LETSENCRYPT_EMAIL=asp78@yandex.ru
    container_name: web
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
      - html:/app/

    depends_on:
      - db
    env_file:
      - ./.env

volumes:
  static_value:
  media_value:
  etc-letsencrypt:
  html:

# docker-compose up -d
