# .github/workflows/**main.yml**
name: Django-app workflow

on: [push]

jobs:
  tests:
    # «Раннер» — создание изолированного окружения с последней версией Ubuntu
    runs-on: ubuntu-latest

    steps:
    # Запуск actions checkout — готового скрипта
    # для клонирования репозитория
    - uses: actions/checkout@v4
    - name: Set up Python
      # Запуск actions setup-python — готового скрипта
      # для развёртывания окружения Python
      uses: actions/setup-python@v5
      with:
        # Выбор версии Python
        python-version: 3.11

    - name: Install dependencies
      run: |
        # обновление pip
        python -m pip install --upgrade pip
        # установка flake8 и его плагинов
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        # установка зависимостей
        pip install -r requirements.txt
    - name: Test with flake8 and django tests
      run: |
        # запуск проверки проекта по flake8
        python -m flake8
        # перейти в папку, содержащую manage.py —
        #<корневая_папка_my_site_docker>/<папка_проекта>/manage.py
        cd ekranstroy/
        # запустить написанные разработчиком тесты
        python manage.py test
        # cd ..
        # pytest
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        # Проверка доступности репозитория Docker Hub для workflow
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        # Вызов сборщика контейнеров docker
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker
        # Запуск скрипта авторизации на Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        # Пуш образа в Docker Hub
        uses: docker/build-push-action@v5
        with:
          # Путь до Dockerfile (если не в корне)
          # context: .
          push: true
          # закидываем из git hub в docker hub
          tags: asp781/ekranstroy:latest

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build_and_push_to_docker_hub
#     steps:
#       - name: executing remote ssh commands to deploy
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.HOST }}
#           username: ${{ secrets.USER }}
#           key: ${{ secrets.SSH_KEY }}
#           passphrase: ${{ secrets.PASSPHRASE }}
#           script: |
#             sudo docker stop web
#             # sudo docker rm web
#             # sudo docker image rm asp781/ek:latest
#             sudo docker system prune -a --volumes
#             sudo docker pull asp781/ekranstroy
#             sudo docker-compose build --no-cache
#             sudo docker-compose up -d

#             # sudo docker stop web
#             # sudo docker rm web

#             sudo docker stop web && sudo docker rm web
#             sudo docker image prune -a
#             sudo docker pull asp781/ekranstroy

#             sudo docker-compose up -d


#             sudo docker-compose up --force-recreate
#             sudo docker-compose up --build --force-recreate
#             sudo docker-compose up --build -V, --renew-anon-volumes
#             sudo docker-compose build --no-cache
#             sudo docker-compose build --no-cache web
#             sudo docker-compose build --pull
# "Image": "sha256:ea78a4828ee1de4c9192aa1b6a48ba15881f23a4fc37a5dd4d242a0fed1eea13",
