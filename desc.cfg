cat ~/.ssh/id_rsa.pub
ssh asp78@158.160.40.222
sudo apt update
sudo apt upgrade -y
sudo apt install docker.io

Установка docker-compose:
DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
mkdir -p $DOCKER_CONFIG/cli-plugins
curl -SL https://github.com/docker/compose/releases/download/v2.24.0/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
sudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose
docker compose version # Docker Compose version v2.24.0

Копирование локального файла в удаленную систему: (делается с локальной машины из папки с файлом)
scp docker-compose.yaml asp78@158.160.40.222: # копирует в корень
scp nginx/default.conf asp78@158.160.40.222:nginx # копирует в папку nginx
scp .env asp78@158.160.40.222: # копирует в корень

sudo docker-compose up
sudo docker-compose stop
sudo docker-compose up -d --build

Очистка docker:
sudo docker system prune -a # удаляет вообще все
sudo docker system prune -a --volumes # удаляет volumes и network
sudo docker volume sudo docker volume prune -a # удаляет volumes
sudo docker container ls -a
sudo docker images
sudo docker volume ls
sudo docker network ls

Удаление пакетов docker:
for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
docker --version

Обновление системы:
sudo apt update
sudo apt upgrade -y

Установка Docker Engine в Ubuntu:
sudo apt-get update
sudo apt-get install ca-certificates curl gnupg
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg
# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
docker --version
sudo docker run hello-world # Эта команда загружает тестовый образ и запускает его в контейнере


# sudo docker-compose exec web python manage.py migrate
# sudo docker-compose exec web python manage.py createsuperuser
# sudo docker-compose exec web python manage.py collectstatic --no-input
# sudo docker-compose exec web python manage.py dumpdata > fixtures.json
# sudo docker-compose exec web python manage.py loaddata fixtures.json


ssh asp78@158.160.40.222
# sudo systemctl stop nginx
sudo docker-compose start

Расположение настроек сервисов:
sudo nano /etc/systemd/system/gunicorn.service
sudo nano /etc/nginx/sites-enabled/default

Вывести список автозагрузки:
systemctl list-unit-files --type=service --state=enabled

Отключение автозагрузки:
sudo systemctl disable nginx
sudo systemctl disable gunicorn
Проверка:
sudo systemctl is-enabled nginx
sudo systemctl is-enabled gunicorn

Включить в автозагрузку:
sudo systemctl enable имя_сервиса

Проверка политики автозапуска контейнера:
sudo docker inspect nginx | grep -A3 RestartPolicy


sha256:4ec5adcdc0939e5d7a4ac47aa79825178c668af387bb9c6f121af413e850e333 serv
sha256:4ec5adcdc0939e5d7a4ac47aa79825178c668af387bb9c6f121af413e850e333 hub

sudo docker exec -it web bash
sudo docker inspect asp781/ek
sudo docker inspect web

"Id": "sha256:4b965fe85d41c6724f41d10137b0e537bb024e1477cd3a2645ef9298029e2821" образа
"Id": "fe8906fdfb13ef7c30d0dffc72927a8f231f9750fc268e2a5288a15de789e4ca" контейнера
sudo docker system prune --volumes
"/var/lib/docker/containers/fe8906fdfb13ef7c30d0dffc72927a8f231f9750fc268e2a5288a15de789e4ca/resolv.conf"
