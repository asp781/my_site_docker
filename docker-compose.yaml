# версия docker-compose
version: '3.8'

# имена и описания контейнеров, которые должны быть развёрнуты
services:
  # описание контейнера db
  db:
    # образ, из которого должен быть запущен контейнер
    image: postgres:13.4-alpine
    # volume и связанная с ним директория в контейнере
    # container_name: db
    volumes:
      - /var/lib/postgresql/data/
    # адрес файла, где хранятся переменные окружения
    env_file:
      - ./.env
  web:
    # build: .
    image: asp781/my_site:latest
    # container_name: web
    restart: always
    volumes:
      # Контейнер web будет работать с данными, хранящиеся в томе static_value,
      # через свою директорию /app/static/
      - static_value:/app/static/
      # Данные, хранящиеся в томе media_value, будут доступны в контейнере web
      # через директорию /app/media/
      - media_value:/app/media/
    # "зависит от",
    depends_on:
      - db
    env_file:
      - ./.env

  nginx:
    # образ, из которого должен быть запущен контейнер
    image: nginx:1.21.3-alpine
    # container_name: nginx
    # запросы с внешнего порта 80 перенаправляем на внутренний порт 80
    ports:
      - "80:80"
      - "443:443"

    volumes:
      # При сборке скопировать созданный конфиг nginx из исходной директории
      # в контейнер и сохранить его в директорию /etc/nginx/conf.d/
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

      # Контейнер nginx будет работать с данными, хранящиеся в томе static_value,
      # через свою директорию /var/html/static/
      - static_value:/var/html/static/

      # Данные, хранящиеся в томе media_value, будут доступны в контейнере nginx
      # через директорию /var/html/media/
      - media_value:/var/html/media/

    depends_on:
      # Контейнер nginx должен быть запущен после контейнера web
      - web

  # certbot:
  #   image: certbot/certbot
  #   depends_on:
  #     - nginx
  #   container_name: certbot
  #   volumes:
  #     - ect-letsencrypt:/ect/letsencrypt
  #     - www-html:/var/www/html
  #   command: certonly --webroot --webroot-path=/var/www/html --email asp78@yandex.ru --agree-tos --no-eff-email --stading -d ekranstroy.ru

volumes:
  # Новые тома
  static_value:
  media_value:
  # ect-letsencrypt:
  # www-html:


# docker-compose up
# docker-compose stop
# docker-compose up -d --build

# sudo docker-compose exec web python manage.py migrate
# sudo docker-compose exec web python manage.py createsuperuser
# sudo docker-compose exec web python manage.py collectstatic --no-input
# sudo docker-compose exec web python manage.py dumpdata > fixtures.json

# ssh asp78@158.160.40.222
# http://ekranstroy.ru/
